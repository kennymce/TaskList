// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskList.Repository;

namespace taskList.Migrations.TaskListDatabase
{
    [DbContext(typeof(TaskListDatabaseContext))]
    [Migration("20190623130304_addSeedData")]
    partial class addSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskList.Models.TaskItem", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("TaskStatusId");

                    b.HasKey("TaskId");

                    b.ToTable("TaskList");

                    b.HasData(
                        new
                        {
                            TaskId = 1,
                            DateTimeCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "First task description",
                            TaskName = "First task",
                            TaskStatusId = 1
                        },
                        new
                        {
                            TaskId = 2,
                            DateTimeCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Second task description",
                            TaskName = "Second task",
                            TaskStatusId = 2
                        },
                        new
                        {
                            TaskId = 3,
                            DateTimeCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Third task description",
                            TaskName = "Third task",
                            TaskStatusId = 3
                        },
                        new
                        {
                            TaskId = 4,
                            DateTimeCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "First task description",
                            TaskName = "Fourth task",
                            TaskStatusId = 4
                        });
                });

            modelBuilder.Entity("TaskList.Models.TaskListStatusItem", b =>
                {
                    b.Property<int>("TaskStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("TaskStatusId");

                    b.ToTable("TaskListStatus");

                    b.HasData(
                        new
                        {
                            TaskStatusId = 1,
                            StatusName = "Not Started"
                        },
                        new
                        {
                            TaskStatusId = 2,
                            StatusName = "In Progress"
                        },
                        new
                        {
                            TaskStatusId = 3,
                            StatusName = "Complete"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
